version: "3"

services:
  db:
    image: postgres:13.4-alpine
    container_name: db
    restart: always
    volumes:
      - ../../var/pgdata:/var/lib/postgresql/data
      # - ../../var/pgdata:/Desktop/test
    ports:
      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: krispcall

  redis:
    image: redis:alpine
    restart: always
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - ../../var/redis_data:/var/lib/redis
      - ../../var/redis/rc.local:/etc/rc.local
    ports:
      - 127.0.0.1:6379:6379
#    zookeeper:
#      image: "confluentinc/cp-zookeeper"
#      hostname: zookeeper
#      container_name: zookeeper
#      ports:
#        - 32181:32181
#      environment:
#        - ZOOKEEPER_CLIENT_PORT=32181
#        - ALLOW_ANONYMOUS_LOGIN=yes
#    kafka:
#      image: confluentinc/cp-kafka
#      container_name: kafka
#      hostname: kafka
#      ports:
#      - 9092:9092
#      - 29092:29092
#      depends_on:
#      - zookeeper
#      environment:
#        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
#        - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:29092,PLAINTEXT://localhost:9092
#        - KAFKA_BROKER_ID=1
#        - ALLOW_PLAINTEXT_LISTENER=yes
